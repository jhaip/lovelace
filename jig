#!/bin/bash

function cmd() {
  if [ "$1" == "start" ]
  then
    cd new-backend/go-server
    go run server.go parser2.go subscriber.go database.go &
    echo -e "running server"
    cd ../..
    sleep 2
    node src/standalone_processes/0__boot.js &
    echo -e "booting"
  elif [ "$1" == "stop" ]
  then
    pkill -f "go run server.go parser2.go subscriber.go database.go"
    pkill -f "/exe/server"
    pkill -f "src/standalone_processes/0__boot.js"
    pkill -f "node src/standalone_processes"
    pkill -f "python3 src/standalone_processes"
    pkill -f "go run src/standalone_processes"
    pkill -f "/tmp/go-build"
  elif [ "$1" == "webcam" ]
  then
    v4l2-ctl \
      --set-ctrl=brightness=128 \
      --set-ctrl=contrast=128 \
      --set-ctrl=saturation=128 \
      --set-ctrl=white_balance_temperature_auto=1 \
      --set-ctrl=gain=0 \
      --set-ctrl=power_line_frequency=2 \
      --set-ctrl=white_balance_temperature=4000 \
      --set-ctrl=sharpness=128 \
      --set-ctrl=backlight_compensation=0 \
      --set-ctrl=exposure_auto=3 \
      --set-ctrl=exposure_auto_priority=0 \
      --set-ctrl=focus_auto=1
    v4l2-ctl --device /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat=MPEG
  elif [ "$1" == "log" ]
  then
    tail -f new-backend/go-server/server.log
  elif [ "$1" == "displays" ]
  then
    export DISPLAY=:0
    python3 src/standalone_processes/648__keyboard.py
    python3 src/standalone_processes/1700__projectorDisplay.py
    python3 src/standalone_processes/1701__projectorDisplay.py
    keyboard_pid = pgrep -f 648__keyboard.py
    keyboard_window_id = xdotool search --pid $keyboard_pid
    xdotool windowmove $keyboard_window_id 0 0
    display_pid1 = pgrep -f 648__keyboard.py
    display_window_id1 = xdotool search --pid $display_pid1
    xdotool windowmove $display_window_id1 0 0
    display_pid2 = pgrep -f 648__keyboard.py
    display_window_id2 = xdotool search --pid $display_pid1
    xdotool windowmove $display_window_id2 1921 0
    xdotool windowactivate $keyboard_window_id
  else
    echo -e "UNKNOWN COMMAND"
    exit 1
  fi
}

cmd $1 $2
